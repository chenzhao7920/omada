{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","email","UsersList","items","length","map","user","key","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","validate","value","validators","isValid","validator","trim","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Auth","auth","useContext","isLoginMode","setIsLoginMode","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","password","inputHandler","setFormData","authSubmitHandler","JSON","stringify","formData","FormData","append","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.a445d2b9.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={`http://localhost:5000/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.email}</h2>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          email={user.email} \n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState  } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n \n \nconst Users = () => {\n \n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n \n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n        'http://localhost:5000/api/users'  \n        );\n      \n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, {   useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          email: undefined,\n          \n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          email: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n         \n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n   \n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n           \n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      \n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/\" exact>\n             USER\n          </NavLink>\n      </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">Sign In </NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>Logout</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Chen Zhao</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact> <Users  /> </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n         <Route path=\"/auth\">  <Auth /> </Route>\n         <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}